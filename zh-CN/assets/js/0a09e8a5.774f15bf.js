"use strict";(self.webpackChunkdora_rs_github_io=self.webpackChunkdora_rs_github_io||[]).push([[5118],{37100:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var r=t(74848),i=t(28453);const o={},s="Virtual Environment",d={id:"guides/Development/virtual-environment",title:"Virtual Environment",description:"run Command",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/guides/Development/virtual-environment.md",sourceDirName:"guides/Development",slug:"/guides/Development/virtual-environment",permalink:"/zh-CN/docs/guides/Development/virtual-environment",draft:!1,unlisted:!1,editUrl:"https://crowdin.com/dora-rs/zh-CN",tags:[],version:"current",frontMatter:{},sidebar:"guides",previous:{title:"\u70ed\u52a0\u8f7d",permalink:"/zh-CN/docs/guides/Development/hot-reload"},next:{title:"\u65e5\u5fd7",permalink:"/zh-CN/docs/guides/Debugging/logs"}},a={},c=[{value:"<code>run</code> Command",id:"run-command",level:2},{value:"<code>start</code> command",id:"start-command",level:2},{value:"Overwrite an environment",id:"overwrite-an-environment",level:2}];function l(n){const e={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:"virtual-environment",children:"Virtual Environment"}),"\n",(0,r.jsxs)(e.h2,{id:"run-command",children:[(0,r.jsx)(e.code,{children:"run"})," Command"]}),"\n",(0,r.jsx)(e.p,{children:"When using dora with the run command, all python environment will be handled by the current environment."}),"\n",(0,r.jsx)(e.p,{children:"You should activate the right env before running dora."}),"\n",(0,r.jsx)(e.p,{children:"You can make sure"}),"\n",(0,r.jsxs)(e.h2,{id:"start-command",children:[(0,r.jsx)(e.code,{children:"start"})," command"]}),"\n",(0,r.jsx)(e.p,{children:"When using dora start, you have to make sure that the daemon is running within the right environement."}),"\n",(0,r.jsxs)(e.p,{children:["It is the one that is handled within the ",(0,r.jsx)(e.code,{children:"dora up"})," command."]}),"\n",(0,r.jsxs)(e.p,{children:["In case of confusion, you can use ",(0,r.jsx)(e.code,{children:"dora destroy && dora up"})," in the env, you want to be."]}),"\n",(0,r.jsx)(e.h2,{id:"overwrite-an-environment",children:"Overwrite an environment"}),"\n",(0,r.jsx)(e.p,{children:"You can overwrite an environment using, the following tricks:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Using predefined python"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"- id: dora-vad\n  path: ../.venv/bin/python\n  args: my_script.py\n"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Using shell"}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-yaml",children:"- id: dora-vad\n  path: shell\n  args: conda activate base && python my_script.py\n"})})]})}function u(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(l,{...n})}):l(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>d});var r=t(96540);const i={},o=r.createContext(i);function s(n){const e=r.useContext(o);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:s(n.components),r.createElement(o.Provider,{value:e},n.children)}}}]);