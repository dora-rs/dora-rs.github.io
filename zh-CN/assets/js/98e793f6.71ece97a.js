"use strict";(self.webpackChunkdora_rs_github_io=self.webpackChunkdora_rs_github_io||[]).push([[3056],{87820:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>u,default:()=>j,frontMatter:()=>h,metadata:()=>d,toc:()=>f});const d=JSON.parse('{"id":"api/dataflow-config","title":"Dataflow Configuration","description":"Dora dataflows are defined and configured through a YAML file.","source":"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/api/dataflow-config.mdx","sourceDirName":"api","slug":"/api/dataflow-config","permalink":"/zh-CN/docs/api/dataflow-config","draft":false,"unlisted":false,"editUrl":"https://crowdin.com/dora-rs/zh-CN","tags":[],"version":"current","frontMatter":{}}');var i=t(74848),s=t(28453),o=t(96540),r=t(87595),a=t.n(r),l=t(60509);function c(){const[e,n]=o.useState(void 0);return o.useEffect(()=>{fetch("https://raw.githubusercontent.com/dora-rs/dora/refs/heads/main/libraries/core/dora-schema.json",{headers:{Accept:"application/json"}}).then(e=>e.json()).then(e=>n(e)).catch(e=>n(e))},[e]),(0,i.jsxs)("div",{children:[void 0===e&&(0,i.jsx)("div",{children:"Loading ..."}),void 0!==e&&e instanceof Error&&(0,i.jsxs)("div",{children:["Error Loading JSON schema : ",e.message]}),void 0!==e&&!(e instanceof Error)&&(0,i.jsx)(a(),{schema:e,viewerOptions:{DescriptionComponent:({description:e})=>(0,i.jsx)(l.oz,{children:e})}})]})}const h={},u="Dataflow Configuration",p={},f=[{value:"Defining Nodes",id:"defining-nodes",level:2},{value:"Inputs and Outputs",id:"inputs-and-outputs",level:3},{value:"Input/Output Example",id:"inputoutput-example",level:4},{value:"Fields Controlling Node Execution",id:"fields-controlling-node-execution",level:3},{value:"<code>path</code> (required)",id:"path-required",level:5},{value:"<code>args</code> and <code>env</code>",id:"args-and-env",level:5},{value:"Fields Controlling Node Build",id:"fields-controlling-node-build",level:3},{value:"<code>build</code>",id:"build",level:5},{value:"<code>git</code>",id:"git",level:4},{value:"Operators",id:"operators",level:2},{value:"Other Dataflow Fields",id:"other-dataflow-fields",level:2},{value:"Full Specification",id:"full-specification",level:2}];function x(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"dataflow-configuration",children:"Dataflow Configuration"})}),"\n",(0,i.jsx)(n.p,{children:"Dora dataflows are defined and configured through a YAML file.\nThis dataflow configuration file specifies the nodes of the dataflow and their inputs and outputs.\nIt also allows configuring communication parameters and enabling debug options."}),"\n",(0,i.jsxs)(n.p,{children:["This article provides an introduction to the dataflow file format and its most important fields.\nFor a complete reference of all available fields their behavior check ouf the documentation of the\n",(0,i.jsx)(n.a,{href:"https://docs.rs/dora-core/0.3.12/dora_core/descriptor/struct.Descriptor.html",children:(0,i.jsx)(n.code,{children:"Descriptor"})})," and\n",(0,i.jsx)(n.a,{href:"https://docs.rs/dora-core/0.3.12/dora_core/descriptor/struct.Node.html",children:(0,i.jsx)(n.code,{children:"Node"})})," structs."]}),"\n",(0,i.jsx)(n.h2,{id:"defining-nodes",children:"Defining Nodes"}),"\n",(0,i.jsxs)(n.p,{children:["The most important field in a dataflow configuration file is the ",(0,i.jsx)(n.code,{children:"nodes"})," field, which lists the\nnodes of the dataflow.\nEach node is identified by a unique ",(0,i.jsx)(n.code,{children:"id"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"nodes:\n    - id: foo\n      path: path/to/the/executable\n      # ... (see below)\n    - id: bar\n      path: path/to/another/executable\n      # ... (see below)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["For each node, you need to specify the ",(0,i.jsx)(n.code,{children:"path"})," of the executable or script that Dora should run when starting the node.\nMost of the other node fields are optional, but you typically want to specify at least some ",(0,i.jsx)(n.code,{children:"inputs"})," and/or ",(0,i.jsx)(n.code,{children:"outputs"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"inputs-and-outputs",children:"Inputs and Outputs"}),"\n",(0,i.jsx)(n.p,{children:"Nodes can send output messages that can be received by other nodes as input.\nAll inputs and outputs need to be specified in the dataflow configuration file."}),"\n",(0,i.jsxs)(n.p,{children:["For each node, list all output IDs that it sends under the\n",(0,i.jsx)(n.a,{href:"https://docs.rs/dora-core/latest/dora_core/descriptor/struct.Node.html#structfield.outputs",children:(0,i.jsx)(n.code,{children:"outputs"})}),"\nkey.\nOnly the specified output IDs are valid to be used in output sending functions such as\n",(0,i.jsx)(n.a,{href:"https://docs.rs/dora-node-api/latest/dora_node_api/struct.DoraNode.html#method.send_output",children:(0,i.jsx)(n.code,{children:"send_output"})}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Receiving nodes can subscribe to outputs by listing them in their\n",(0,i.jsx)(n.a,{href:"https://docs.rs/dora-core/latest/dora_core/descriptor/struct.Node.html#structfield.inputs",children:(0,i.jsx)(n.code,{children:"inputs"})}),"\nfield.\nThe ",(0,i.jsx)(n.code,{children:"inputs"})," field should be a key-value map of the following format:\n",(0,i.jsx)(n.code,{children:"input_id: source_node_id/source_node_output_id"})]}),"\n",(0,i.jsx)(n.p,{children:"The components are defined as follows:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"input_id"})," is the local identifier that should be used for this input.\nThis will map to the ",(0,i.jsx)(n.code,{children:"id"})," field of\n",(0,i.jsx)(n.a,{href:"https://docs.rs/dora-node-api/latest/dora_node_api/enum.Event.html#variant.Input",children:(0,i.jsx)(n.code,{children:"Event::Input"})}),"\nevents sent to the node event loop."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"source_node_id"})," should be the ",(0,i.jsx)(n.code,{children:"id"})," field of the node that sends the output that we want\nto subscribe to"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"source_node_output_id"})," should be the identifier of the output that that we want\nto subscribe to"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"inputoutput-example",children:"Input/Output Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"nodes:\n    - id: example-node\n      outputs:\n          - one\n          - two\n    - id: receiver\n      inputs:\n          my_input: example-node/two\n"})}),"\n",(0,i.jsx)(n.h3,{id:"fields-controlling-node-execution",children:"Fields Controlling Node Execution"}),"\n",(0,i.jsx)(n.p,{children:"Use the following fields to define how a node is executed, including command-line arguments and environment\nvariables."}),"\n",(0,i.jsxs)(n.h5,{id:"path-required",children:[(0,i.jsx)(n.code,{children:"path"})," (required)"]}),"\n",(0,i.jsx)(n.p,{children:"Specifies the path of the executable or script that Dora should run when starting the dataflow.\nThis can point to a normal executable (e.g. when using a compiled language such as Rust) or a Python script."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"nodes:\n    - id: rust-example\n      path: target/release/rust-node\n    - id: python-example\n      path: ./receive_data.py\n"})}),"\n",(0,i.jsxs)(n.p,{children:["See the\n",(0,i.jsxs)(n.a,{href:"https://docs.rs/dora-core/latest/dora_core/descriptor/struct.Node.html#structfield.path",children:[(0,i.jsx)(n.code,{children:"path"})," field documentation"]}),"\nfor details."]}),"\n",(0,i.jsxs)(n.h5,{id:"args-and-env",children:[(0,i.jsx)(n.code,{children:"args"})," and ",(0,i.jsx)(n.code,{children:"env"})]}),"\n",(0,i.jsxs)(n.p,{children:["Use the\n",(0,i.jsx)(n.a,{href:"https://docs.rs/dora-core/latest/dora_core/descriptor/struct.Node.html#structfield.args",children:(0,i.jsx)(n.code,{children:"args"})}),"\nfield to specify command-line arguments that should be passed to the executable/script specified in\n",(0,i.jsx)(n.code,{children:"path"}),".\nUse the\n",(0,i.jsx)(n.a,{href:"https://docs.rs/dora-core/latest/dora_core/descriptor/struct.Node.html#structfield.env",children:(0,i.jsx)(n.code,{children:"env"})}),"\nfield for setting environment variables."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"nodes:\n    - id: example\n      path: example-node\n      args: -v --some-flag foo\n      env:\n          IMAGE_WIDTH: 640\n          IMAGE_HEIGHT: 480\n"})}),"\n",(0,i.jsx)(n.h3,{id:"fields-controlling-node-build",children:"Fields Controlling Node Build"}),"\n",(0,i.jsxs)(n.p,{children:["Use build fields define how a node is set up and built on ",(0,i.jsx)(n.code,{children:"dora build"}),".\nAll build fields are optional."]}),"\n",(0,i.jsx)(n.h5,{id:"build",children:(0,i.jsx)(n.code,{children:"build"})}),"\n",(0,i.jsxs)(n.p,{children:["The\n",(0,i.jsx)(n.a,{href:"https://docs.rs/dora-core/latest/dora_core/descriptor/struct.Node.html#structfield.build",children:(0,i.jsx)(n.code,{children:"build"})}),"\nfield specifies the command that should be invoked for building the node."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"- id: build-example\n  build: cargo build -p receive_data --release\n  path: target/release/receive_data\n- id: multi-line-example\n  build: |\n      pip install flash-attn\n      pip install -e ../../node-hub/dora-phi4\n  path: dora-phi4\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsxs)(n.strong,{children:["Special treatment of ",(0,i.jsx)(n.code,{children:"pip"}),":"]})," Build lines that start with ",(0,i.jsx)(n.code,{children:"pip"})," or ",(0,i.jsx)(n.code,{children:"pip3"})," are treated in a\nspecial way:\nIf the ",(0,i.jsx)(n.code,{children:"--uv"})," argument is passed to the ",(0,i.jsx)(n.code,{children:"dora build"})," command, all ",(0,i.jsx)(n.code,{children:"pip"}),"/",(0,i.jsx)(n.code,{children:"pip3"})," commands are run\nthrough the ",(0,i.jsxs)(n.a,{href:"https://docs.astral.sh/uv/",children:[(0,i.jsx)(n.code,{children:"uv"})," package manager"]}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"git",children:(0,i.jsx)(n.code,{children:"git"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.a,{href:"https://docs.rs/dora-core/latest/dora_core/descriptor/struct.Node.html#structfield.git",children:(0,i.jsx)(n.code,{children:"git"})}),"\nfield allows downloading nodes from git repositories.\nThis can be especially useful for distributed dataflows."]}),"\n",(0,i.jsxs)(n.p,{children:["When a ",(0,i.jsx)(n.code,{children:"git"})," key is specified, ",(0,i.jsx)(n.code,{children:"dora build"})," automatically clones the specified repository (or reuse\nan existing clone).\nThen it checks out the specified ",(0,i.jsx)(n.a,{href:"#branch",children:(0,i.jsx)(n.code,{children:"branch"})}),", ",(0,i.jsx)(n.a,{href:"#tag",children:(0,i.jsx)(n.code,{children:"tag"})}),", or ",(0,i.jsx)(n.a,{href:"#rev",children:(0,i.jsx)(n.code,{children:"rev"})}),", or the\ndefault branch if none of them are specified.\nAfterwards it runs the ",(0,i.jsx)(n.code,{children:"build"})," command if specified."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"nodes:\n    - id: rust-node\n      git: https://github.com/dora-rs/dora.git\n      branch: main\n      build: cargo build -p rust-dataflow-example-node\n      path: target/debug/rust-dataflow-example-node\n"})}),"\n",(0,i.jsx)(n.h2,{id:"operators",children:"Operators"}),"\n",(0,i.jsx)(n.p,{children:"Operators are an experimental, lightweight alternative to nodes.\nInstead of running as a separate process, operators are linked into a runtime process.\nThis allows running multiple operators to share a single address space (not supported for Python currently)."}),"\n",(0,i.jsxs)(n.p,{children:["Operators are defined as part of the node list, as children of a runtime node.\nA runtime node is a special node that specifies no ",(0,i.jsx)(n.code,{children:"path"})," field, but contains an\n",(0,i.jsx)(n.a,{href:"https://docs.rs/dora-core/latest/dora_core/descriptor/struct.Node.html#structfield.operators",children:(0,i.jsx)(n.code,{children:"operators"})}),"\nfield instead."]}),"\n",(0,i.jsx)(n.h2,{id:"other-dataflow-fields",children:"Other Dataflow Fields"}),"\n",(0,i.jsxs)(n.p,{children:["See the ",(0,i.jsx)(n.a,{href:"https://docs.rs/dora-core/latest/dora_core/descriptor/struct.Descriptor.html",children:(0,i.jsx)(n.code,{children:"Descriptor"})}),"\nstruct for a full list of supported fields."]}),"\n",(0,i.jsx)(n.h2,{id:"full-specification",children:"Full Specification"}),"\n","\n",(0,i.jsx)(c,{})]})}function j(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(x,{...e})}):x(e)}}}]);