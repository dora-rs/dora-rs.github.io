"use strict";(self.webpackChunkdora_rs_github_io=self.webpackChunkdora_rs_github_io||[]).push([[1382],{3755:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"api/testing-nodes","title":"\u6d4b\u8bd5\u8282\u70b9","description":"\u4e3a\u4e86\u786e\u4fdd\u4e00\u4e2a\u8282\u70b9\u884c\u4e3a\u7b26\u5408\u653e\u97f3\u4e50\uff0c\u60a8\u53ef\u80fd\u8981\u8fdb\u884c\u4e00\u4e9b\u6d4b\u8bd5\u3002 \u6709\u591a\u4e2a\u7ea7\u522b\u7684\u6d4b\u8bd5\uff1a","source":"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/api/testing-nodes.md","sourceDirName":"api","slug":"/api/testing-nodes","permalink":"/zh-CN/docs/api/testing-nodes","draft":false,"unlisted":false,"editUrl":"https://crowdin.com/dora-rs/zh-CN","tags":[],"version":"current","frontMatter":{}}');var r=t(74848),s=t(28453);const d={},o="\u6d4b\u8bd5\u8282\u70b9",c={},l=[{value:"\u4ea4\u4e92\u6a21\u5f0f",id:"\u4ea4\u4e92\u6a21\u5f0f",level:2},{value:"\u793a\u4f8b",id:"\u793a\u4f8b",level:3},{value:"JSON \u6570\u636e",id:"json-\u6570\u636e",level:3}];function a(n){const e={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"\u6d4b\u8bd5\u8282\u70b9",children:"\u6d4b\u8bd5\u8282\u70b9"})}),"\n",(0,r.jsx)(e.p,{children:"\u4e3a\u4e86\u786e\u4fdd\u4e00\u4e2a\u8282\u70b9\u884c\u4e3a\u7b26\u5408\u653e\u97f3\u4e50\uff0c\u60a8\u53ef\u80fd\u8981\u8fdb\u884c\u4e00\u4e9b\u6d4b\u8bd5\u3002 \u6709\u591a\u4e2a\u7ea7\u522b\u7684\u6d4b\u8bd5\uff1a"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsxs)(e.strong,{children:[(0,r.jsx)(e.a,{href:"https://en.wikipedia.org/wiki/Unit_testing",children:"\u5355\u5143\u6d4b\u8bd5"}),":"]}),"\n\u9a8c\u8bc1\u4e00\u4e2a\u7279\u5b9a\u51fd\u6570\u6216\u7ec4\u4ef6\u884c\u4e3a\u7b26\u5408\u9884\u671f\u3002"]}),"\n",(0,r.jsxs)(e.p,{children:["\u8282\u70b9\u662f\u6b63\u5e38\u7684\u53ef\u6267\u884c\u6587\u4ef6\u6216\u811a\u672c\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u4f7f\u7528\u60a8\u9009\u62e9\u7684\u7f16\u7a0b\u8bed\u8a00\u6807\u51c6\u6d4b\u8bd5\u5de5\u5177\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\u3002 \u4f8b\u5982, Rust \u8282\u70b9\u60a8\u53ef\u4ee5\u4f7f\u7528 Rust\u7684built-in\n",(0,r.jsx)(e.a,{href:"https://doc.rust-lang.org/book/ch11-01-writing-tests.html",children:"test framework"})," \u4e0e",(0,r.jsx)(e.code,{children:"cargo test"}),"\u7ec4\u5408\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsxs)(e.strong,{children:["[",(0,r.jsx)(e.a,{href:"https://en.wikipedia.org/wiki/Integration_testing",children:"\u96c6\u6210\u6d4b\u8bd5"}),"]:"]}),"\n\u9a8c\u8bc1\u4e00\u4e2a\u8282\u70b9\u5bf9\u4e00\u7ec4\u8f93\u5165\u7684\u9884\u671f\u53cd\u5e94\u548c\u5b83\u4ea7\u751f\u9884\u671f\u7684\u8f93\u51fa\u3002"]}),"\n",(0,r.jsxs)(e.p,{children:["Dora do ",(0,r.jsx)(e.em,{children:"not"})," \u63d0\u4f9b\u81ea\u52a8\u96c6\u6210\u6d4b\u8bd5\u529f\u80fd\u3002 \u6211\u4eec\u8ba1\u5212\u6dfb\u52a0\u4e00\u4e2a\u65b9\u5f0f\uff0c\u5728\u72ec\u7acb\u7684\u201c\u6d4b\u8bd5\u6a21\u5f0f\u201d\u4e2d\u8fd0\u884c\u8282\u70b9\uff0c\u8f93\u5165\u901a\u8fc7\u4e00\u4e2a\u7279\u6b8a\u8f93\u5165\u6587\u4ef6\uff0c\u5e76\u4e14\u5199\u5165\u4e00\u4e2a\u8f93\u51fa\u6587\u4ef6\u81f3\u8f93\u51fa\u3002 \u8fd9\u5c06\u4f7f\u8282\u70b9\u7684\u96c6\u6210\u6d4b\u8bd5\u6210\u4e3a\u53ef\u80fd\uff0c\u56e0\u4e3a\u60a8\u53ef\u4ee5\u9a8c\u8bc1\u6bcf\u4e2a\u8282\u70b9\u5bf9\u7ed9\u5b9a\u8f93\u51fa\u7684\u53cd\u5e94\u662f\u5426\u7b26\u5408\u9884\u671f\u3002"]}),"\n",(0,r.jsxs)(e.p,{children:['\u7136\u800c\uff0cDora \u8282\u70b9\u53ef\u4ee5\u5728\u5355\u72ec\u7684 _"',(0,r.jsx)(e.a,{href:"#interactive-mode",children:"\u4ea4\u4e92\u6a21\u5f0f"}),'"_\u4e2d\u8fd0\u884c\uff0c\u5728\u8fd9\u91cc\u8f93\u5165\u662f\u901a\u8fc7\u547d\u4ee4\u884c\u63d0\u4f9b\u7684\u3002 \u6b64\u529f\u80fd\u6709\u52a9\u4e8e\u624b\u52a8\u96c6\u6210\u6d4b\u8bd5\u3002\n\u8be6\u7ec6\u4fe1\u606f\u89c1 ',(0,r.jsx)(e.a,{href:"#interactive-mode",children:"below"}),"\u3002"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:[(0,r.jsxs)(e.strong,{children:[(0,r.jsx)(e.a,{href:"https://en.wikipedia.org/wiki/System_testing",children:"\u7aef\u5230\u7aef\u6d4b\u8bd5"}),":"]}),"\n\u9a8c\u8bc1\u5177\u6709\u591a\u4e2a\u8282\u70b9\u7684\u5b8c\u6574\u6570\u636e\u6d41\u662f\u5426\u6309\u9884\u671f\u5de5\u4f5c\u3002"]}),"\n",(0,r.jsxs)(e.p,{children:["\u8fd9\u79cd\u6d4b\u8bd5\u901a\u5e38\u662f\u624b\u52a8\u8fdb\u884c\u7684\uff0c\u4f7f\u7528 ",(0,r.jsx)(e.code,{children:"dora run"})," \u6216 ",(0,r.jsx)(e.code,{children:"dora start"})," CLI \u547d\u4ee4\u3002\n\u5982\u679c\u60a8\u7684\u6570\u636e\u6d41\u6709\u5b9a\u4e49\u7684\u9000\u51fa\u6761\u4ef6\uff0c \u60a8\u4e5f\u53ef\u4ee5\u901a\u8fc7 ",(0,r.jsx)(e.code,{children:"dora run"})," \u8fd0\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\uff1a\u9000\u51fa\u72b6\u6001\u5c06\u62a5\u544a\u662f\u5426\u53d1\u751f\u4efb\u4f55\u9519\u8bef\u3002"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"\u4ea4\u4e92\u6a21\u5f0f",children:"\u4ea4\u4e92\u6a21\u5f0f"}),"\n",(0,r.jsxs)(e.p,{children:["\u4ea4\u4e92\u6a21\u5f0f\u5141\u8bb8\u5728\u72ec\u7acb\u6a21\u5f0f\u4e0b\u542f\u52a8\u4e00\u4e2a\u8282\u70b9\uff0c\u63d0\u793a\u8f93\u5165\u7ec8\u7aef\u3002 \u5b83\u9002\u7528\u4e8e\u6240\u6709\u4f7f\u7528 ",(0,r.jsx)(e.code,{children:"init_from_env"})," \u6216 ",(0,r.jsx)(e.code,{children:"init_interactive"})," \u51fd\u6570\u7684\u8282\u70b9\u3002 \u542f\u52a8\u4ea4\u4e92\u6a21\u5f0f\uff0c\u624b\u52a8\u542f\u52a8\u60a8\u7684\u8282\u70b9\u53ef\u6267\u884c\u6587\u4ef6/\u811a\u672c \u5c31\u50cf\u6b63\u5e38\u53ef\u6267\u884c\u6587\u4ef6\u4e00\u6837\u3002"]}),"\n",(0,r.jsxs)(e.p,{children:["\u8fd9\u79cd\u4ea4\u4e92\u6a21\u5f0f\u4e0d\u4f1a\u8fde\u63a5\u5230 ",(0,r.jsx)(e.code,{children:"dora daemon"})," \uff0c\u800c\u662f\u4f1a\u63d0\u793a\u7ec8\u7aef\u4e0a\u7684\u8282\u70b9\u8f93\u5165\u3002 \u5728\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c\u8282\u70b9\u5b8c\u5168\u4ece\u4f11\u7720\u548c\u5176\u4ed6\u8282\u70b9\u5206\u79bb\u51fa\u6765\uff0c\u56e0\u6b64\u5b83\u4e0d\u80fd\u6210\u4e3a\u6570\u636e\u6d41\u7684\u4e00\u90e8\u5206\u3002"]}),"\n",(0,r.jsx)(e.h3,{id:"\u793a\u4f8b",children:"\u793a\u4f8b"}),"\n",(0,r.jsxs)(e.p,{children:["\u8fd0\u884c\u4efb\u610f\u8282\u70b9\u4f7f\u7528 ",(0,r.jsx)(e.code,{children:"init_interactive"})," \u6216\u81ea\u4e00\u4e2a\u7ec8\u7aef\u76f4\u63a5 ",(0,r.jsx)(e.a,{href:"Self::init_from_env",children:(0,r.jsx)(e.code,{children:"init_from_env"})}),"\u3002 \u7136\u540e\u8be5\u8282\u70b9\u5c06\u4ee5\u201c\u4ea4\u4e92\u6a21\u5f0f\u201d\u5f00\u59cb\uff0c\u5e76\u63d0\u793a\u60a8\u4e0b\u4e00\u4e2a\u8f93\u5165\uff1a"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"> cargo build -p rust-dataflow-example-node\n> target/debug/rust-dataflow-example-node\nhello\nStarting node in interactive mode as DORA_NODE_CONFIG env variable is not set\nNode asks for next input\n? Input ID\n[empty input ID to stop]\n"})}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:"rust-dataflo-example-node"})," \u9700\u8981\u4e00\u4e2a ",(0,r.jsx)(e.code,{children:"tick"})," \u8f93\u5165\uff0c\u6240\u4ee5\u8ba9\u6211\u4eec\u628a\u8f93\u5165 ID \u8bbe\u7f6e\u4e3a\n",(0,r.jsx)(e.code,{children:"tick"})," \u3002 Tick \u6d88\u606f\u6ca1\u6709\u4efb\u4f55\u6570\u636e\uff0c\u56e0\u6b64\u63d0\u793a\u65f6\u6211\u4eec\u7559\u7a7a\u201c\u6570\u636e\u201d\uff1a"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"Node asks for next input\n> Input ID tick\n> Data\ntick 0, sending 0x943ed1be20c711a4\nnode sends output random with data: PrimitiveArray<UInt64>\n[\n  10682205980693303716,\n]\nNode asks for next input\n? Input ID\n[empty input ID to stop]\n"})}),"\n",(0,r.jsxs)(e.p,{children:["\u6211\u4eec\u770b\u5230\u8282\u70b9\u7684",(0,r.jsx)(e.code,{children:"stdout"})," \u8f93\u51fa\u4ee5\u53ca\u5b83\u53d1\u9001\u7684\u8f93\u51fa\u4fe1\u606f\u90fd\u88ab\u6253\u5370\u5230\u7ec8\u7aef\u3002 \u7136\u540e\u6211\u4eec\u518d\u83b7\u5f97\u53e6\u4e00\u4e2a\u63d0\u793a\u4ee5\u83b7\u53d6\u4e0b\u4e00\u4e2a\u8f93\u5165\u3002"]}),"\n",(0,r.jsx)(e.p,{children:"\u5982\u679c\u60a8\u60f3\u8981\u53d1\u9001\u5e26\u6709\u6570\u636e\u7684\u8f93\u5165\uff0c \u60a8\u53ef\u4ee5\u5c06\u5176\u4f5c\u4e3a\u6587\u672c(\u7528\u4e8e\u5b57\u7b26\u4e32\u6570\u636e) \u6216\u4f5c\u4e3aJSON\u5bf9\u8c61(\u7528\u4e8e\u7ed3\u6784\u6570\u636e)\u3002 \u76ee\u524d\u4e0d\u652f\u6301\u5176\u4ed6\u6570\u636e\u7c7b\u578b\u3002"}),"\n",(0,r.jsx)(e.p,{children:"\u7a7a\u8f93\u5165 ID \u88ab\u89e3\u91ca\u4e3a\u505c\u6b62\u6307\u4ee4\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"> Input ID\ngiven input ID is empty -> stopping\nReceived stop\nNode asks for next input\nevent channel was stopped -> returning empty event list\nnode reports EventStreamDropped\nnode reports closed outputs []\nnode reports OutputsDone\n"})}),"\n",(0,r.jsxs)(e.p,{children:["\u9664\u4e86\u8282\u70b9\u8f93\u51fa\u5916\uff0c\u6211\u4eec\u8fd8\u770b\u5230\u8282\u70b9\u62a5\u544a\u7684\u4e0d\u540c\u4e8b\u4ef6\u7684\u65e5\u5fd7\u6d88\u606f\u3002 \u5728 ",(0,r.jsx)(e.code,{children:"OutputsDone"})," \u4e4b\u540e\uff0c\u8282\u70b9\u5e94\u8be5\u9000\u51fa\u3002"]}),"\n",(0,r.jsx)(e.h3,{id:"json-\u6570\u636e",children:"JSON \u6570\u636e"}),"\n",(0,r.jsxs)(e.p,{children:["\u9664\u4e86\u6587\u672c\u8f93\u5165\u5916\uff0c",(0,r.jsx)(e.code,{children:"Data"})," \u63d0\u793a\u4e5f\u652f\u6301JSON\u5bf9\u8c61\uff0c\u8fd9\u4e9b\u5bf9\u8c61\u5c06\u88ab\u8f6c\u6362\u4e3a Apache Arrow \u7ed3\u6784\u6570\u7ec4\uff1a"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:'Node asks for next input\n> Input ID some_input\n> Data { "field_1": 42, "field_2": { "inner": "foo" } }\n'})}),"\n",(0,r.jsx)(e.p,{children:"\u6b64 JSON \u6570\u636e\u8f6c\u6362\u6210\u4ee5\u4e0b Arrow \u6570\u7ec4\uff1a"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:'StructArray\n-- validity: [valid, ]\n[\n  -- child 0: "field_1" (Int64)\n     PrimitiveArray<Int64>\n     [42,]\n  -- child 1: "field_2" (Struct([Field { name: "inner", data_type: Utf8, nullable: true, dict_id: 0, dict_is_ordered: false, metadata: {} }]))\n     StructArray\n     -- validity: [valid,]\n     [\n       -- child 0: "inner" (Utf8)\n       StringArray\n       ["foo",]\n     ]\n]\n'})})]})}function h(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(a,{...n})}):a(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>d,x:()=>o});var i=t(96540);const r={},s=i.createContext(r);function d(n){const e=i.useContext(s);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:d(n.components),i.createElement(s.Provider,{value:e},n.children)}}}]);