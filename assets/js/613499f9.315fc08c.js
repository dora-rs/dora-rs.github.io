"use strict";(self.webpackChunkdora_rs_github_io=self.webpackChunkdora_rs_github_io||[]).push([[1164],{30972:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var t=o(74848),r=o(28453);const s={},i="Yolov5 operator",a={id:"nodes_operators/yolov5_op",title:"Yolov5 operator",description:"Yolov5 object detection operator generates bounding boxes on images where it detects object.",source:"@site/docs/nodes_operators/yolov5_op.md",sourceDirName:"nodes_operators",slug:"/nodes_operators/yolov5_op",permalink:"/docs/nodes_operators/yolov5_op",draft:!1,unlisted:!1,editUrl:"https://github.com/dora-rs/dora-rs.github.io/edit/main/docs/nodes_operators/yolov5_op.md",tags:[],version:"current",frontMatter:{},sidebar:"nodes_operators",previous:{title:"yolop operator",permalink:"/docs/nodes_operators/yolop_op"}},l={},d=[{value:"Inputs",id:"inputs",level:2},{value:"Outputs",id:"outputs",level:2},{value:"Example Image",id:"example-image",level:2},{value:"Graph Description",id:"graph-description",level:2},{value:"Graph Visualisation",id:"graph-visualisation",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>__init__()</code>",id:"__init__",level:3},{value:"<code>.on_event(...)</code>",id:"on_event",level:3},{value:"<code>.on_input(...)</code>",id:"on_input",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",mermaid:"mermaid",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components},{Details:o}=n;return o||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"yolov5-operator",children:"Yolov5 operator"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Yolov5"})," object detection operator generates bounding boxes on images where it detects object."]}),"\n",(0,t.jsxs)(n.p,{children:["More info here: ",(0,t.jsx)(n.a,{href:"https://github.com/ultralytics/yolov5",children:"https://github.com/ultralytics/yolov5"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Yolov5"})," has not been finetuned on the simulation and is directly importing weight from Pytorch Hub."]}),"\n",(0,t.jsxs)(n.p,{children:["In case you want to run ",(0,t.jsx)(n.code,{children:"yolov5"})," without internet you can clone ",(0,t.jsx)(n.a,{href:"https://github.com/ultralytics/yolov5",children:"https://github.com/ultralytics/yolov5"})," and download the weights you want to use from ",(0,t.jsx)(n.a,{href:"https://github.com/ultralytics/yolov5/releases/tag/v7.0",children:"the release page"})," and then specify within the yaml graph the two environments variables:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"YOLOV5_PATH: YOUR/PATH"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"YOLOV5_WEIGHT_PATH: YOUR/WEIGHT/PATH"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"You can also choose to allocate the model in GPU using the environment variable:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"PYTORCH_DEVICE: cuda # or cpu"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"inputs",children:"Inputs"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"image: HEIGHT x WIDTH x BGR array."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"outputs",children:"Outputs"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"bbox: N_BBOX, X_MIN, X_MAX, Y_MIN, Y_MAX, CONDIDENCE, CLASS, array"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"example-image",children:"Example Image"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://i.imgur.com/hPrazyl.jpg",alt:"yolov5 example"})}),"\n",(0,t.jsx)(n.h2,{id:"graph-description",children:"Graph Description"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"  - id: yolov5\n    operator: \n      outputs:\n        - bbox\n      inputs:\n        image: webcam/image\n      python: ../../operators/yolov5_op.py\n"})}),"\n",(0,t.jsx)(n.h2,{id:"graph-visualisation",children:"Graph Visualisation"}),"\n",(0,t.jsx)(n.mermaid,{value:"        flowchart TB\n  oasis_agent\nsubgraph yolov5\n  yolov5/op[op]\nend\nsubgraph obstacle_location_op\n  obstacle_location_op/op[op]\nend\n  oasis_agent -- image --\x3e yolov5/op\n  yolov5/op -- bbox as obstacles_bbox --\x3e obstacle_location_op/op"}),"\n",(0,t.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(n.h3,{id:"__init__",children:(0,t.jsx)(n.code,{children:"__init__()"})}),"\n",(0,t.jsxs)(o,{children:[(0,t.jsx)("summary",{children:"Source Code"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'    def __init__(self):\n        if YOLOV5_PATH is None:\n            # With internet\n            self.model = torch.hub.load(\n                "ultralytics/yolov5",\n                "yolov5n",\n            )\n        else:\n            # Without internet\n            #\n            # To install:\n            # cd $DORA_HOME_DEP/dependecies # Optional\n            # git clone https://github.com/ultralytics/yolov5.git\n            # rm yolov5/.git -rf\n            # Add YOLOV5_PATH and YOLOV5_WEIGHT_PATH in your YAML graph\n\n            self.model = torch.hub.load(\n                YOLOV5_PATH,\n                "custom",\n                path=YOLOV5_WEIGHT_PATH,\n                source="local",\n            )\n\n        self.model.to(torch.device(DEVICE))\n        self.model.eval()\n\n\n'})})]}),"\n",(0,t.jsx)(n.h3,{id:"on_event",children:(0,t.jsx)(n.code,{children:".on_event(...)"})}),"\n",(0,t.jsxs)(o,{children:[(0,t.jsx)("summary",{children:"Source Code"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'\n    def on_event(\n        self,\n        dora_event: dict,\n        send_output: Callable[[str, bytes], None],\n    ) -> DoraStatus:\n        if dora_event["type"] == "INPUT":\n            return self.on_input(dora_event, send_output)\n        return DoraStatus.CONTINUE\n\n\n'})})]}),"\n",(0,t.jsx)(n.h3,{id:"on_input",children:(0,t.jsx)(n.code,{children:".on_input(...)"})}),"\n",(0,t.jsx)(n.p,{children:'Handle image\nArgs:\ndora_input["id"] (str): Id of the input declared in the yaml configuration\ndora_input["value"] (arrow.array (UInt8)): Bytes message of the input\nsend_output (Callable[[str, bytes]]): Function enabling sending output back to dora.'}),"\n",(0,t.jsxs)(o,{children:[(0,t.jsx)("summary",{children:"Source Code"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'\n    def on_input(\n        self,\n        dora_input: dict,\n        send_output: Callable[[str, bytes], None],\n    ) -> DoraStatus:\n        """\n        Handle image\n        Args:\n            dora_input["id"] (str): Id of the input declared in the yaml configuration\n            dora_input["value"] (arrow.array (UInt8)): Bytes message of the input\n            send_output (Callable[[str, bytes]]): Function enabling sending output back to dora.\n        """\n        if dora_input["id"] == "image":\n            frame = (\n                dora_input["value"].to_numpy().reshape((IMAGE_HEIGHT, IMAGE_WIDTH, 4))\n            )\n            frame = frame[:, :, :3]\n\n            results = self.model(frame)  # includes NMS\n            arrays = np.array(results.xyxy[0].cpu())[\n                :, [0, 2, 1, 3, 4, 5]\n            ]  # xyxy -> xxyy\n            arrays[:, 4] *= 100\n            arrays = arrays.astype(np.int32)\n            arrays = pa.array(arrays.ravel())\n            send_output("bbox", arrays, dora_input["metadata"])\n            return DoraStatus.CONTINUE\n\n\n'})})]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>a});var t=o(96540);const r={},s=t.createContext(r);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);